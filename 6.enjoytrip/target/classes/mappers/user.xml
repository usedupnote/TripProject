<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- name space는 UserRepo의 fully qualified name으로 설정한다. -->
<mapper namespace="com.ssafy.enjoytrip.model.repo.UserRepo">

	<resultMap type="UserDto" id="UserAll" extends="user">
		<id column="email" property="user_email"/>
		<result column="img" property="user_img"/>
		<result column="gender" property="user_gender"/>
		<result column="grade_id" property="user_grade_id"/>
		<result column="nickname" property="user_nickname"/>
		<result column="age" property="user_age"/>
		<result column="join_at" property="user_join_at"/>
		<result column="last_login" property="user_last_login"/>
	</resultMap>
	
<!-- 사용자 정보를 저장한다. id는 repo클래스의 메소드 이름과 일치시킨다. -->
	<insert id="joinUser">
		INSERT INTO user 
		VALUES (#{email},#{password},#{img},#{gender},#{grade_id},#{nickname},#{age},#{join_at},#{last_login})
	</insert>
	
	<!-- select user 필오없지 않을까? 밑의 기능과 중복 -->
	
	<!-- 모든 사용자 정보를 검색한다. id는 dao클래스의 메소드 이름과 일치시킨다. -->
	<select id="listUser" resultType="User">
		SELECT * FROM user
	</select>
	
	<!-- Emain로 사용자 정보를 검색한다. id는 dao클래스의 메소드 이름과 일치시킨다. -->
	<select id="listUserByEmail" resultType="User">
		SELECT * FROM user
		<if test="key!='none'">
			WHERE email LIKE CONCAT('%',#{email},'%')
		</if>
	</select>
	
	<update id="updateUser" parameterType="UserDto">
		UPDATE user
		<trim prefix="set" suffixOverrides=",">
			<if test="user_nickname != null">nickname = #{user_nickname},</if>
		</trim>
		WHERE email = #{user_email}
	</update>
	
	<delete id="deleteUser" parameterType="String">
		DELETE FROM user
		WHERE email = #{user_email}
	</delete>
	
	
</mapper>